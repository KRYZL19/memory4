"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.examplePages = exports.examplePaths = exports.basePaths = void 0;
const path_1 = __importDefault(require("path"));
const config_1 = __importDefault(require("./config"));
const debug_1 = __importDefault(require("debug"));
const debug_scope = process.env.DEBUG || '', logger = (0, debug_1.default)('sockethub:routes'), address = config_1.default.get('public:protocol') + '://' +
    config_1.default.get('public:host') + ':' +
    config_1.default.get('public:port') +
    config_1.default.get('public:path');
exports.basePaths = {
    '/sockethub-client.js': path_1.default.resolve(`${__dirname}/../dist/client/sockethub-client.js`),
    '/sockethub-client.js.map': path_1.default.resolve(`${__dirname}/../dist/client/sockethub-client.js.map`),
    '/socket.io.js': path_1.default.resolve(`${__dirname}/../node_modules/socket.io/client-dist/socket.io.js`),
    '/socket.io.js.map': path_1.default.resolve(`${__dirname}/../node_modules/socket.io/client-dist/socket.io.js.map`),
    // '/activity-streams.js':
    // path.resolve(`${__dirname}/../node_modules/activity-streams/browser/activity-streams.js`),
    '/activity-streams.min.js': path_1.default.resolve(`${__dirname}/../node_modules/activity-streams/browser/activity-streams.min.js`),
};
exports.examplePaths = {
    '/jquery.js': path_1.default.resolve(`${__dirname}/../node_modules/jquery/dist/jquery.min.js`),
    '/jquery.min.map': path_1.default.resolve(`${__dirname}/../node_modules/jquery/dist/jquery.min.map`),
    '/examples/shared.js': path_1.default.resolve(`${__dirname}/../views/examples/shared.js`)
};
exports.examplePages = {
    '/': path_1.default.resolve(`${__dirname}/../views/index.ejs`),
    '/examples/dummy': path_1.default.resolve(`${__dirname}/../views/examples/dummy.ejs`),
    '/examples/feeds': path_1.default.resolve(`${__dirname}/../views/examples/feeds.ejs`),
    '/examples/irc': path_1.default.resolve(`${__dirname}/../views/examples/irc.ejs`),
    '/examples/xmpp': path_1.default.resolve(`${__dirname}/../views/examples/xmpp.ejs`)
};
function prepFileRoutes(pathMap) {
    let _routes = [];
    Object.keys(pathMap).forEach((key) => {
        _routes.push({
            meta: {
                method: 'GET',
                path: key
            },
            route: (req, res) => {
                logger(`serving resource ${req.url}`);
                res.setHeader('Access-Control-Allow-Origin', '*');
                res.sendFile(pathMap[req.url]);
            }
        });
    });
    return _routes;
}
const baseRoutes = prepFileRoutes(exports.basePaths);
const exampleRoutes = prepFileRoutes(exports.examplePaths);
Object.keys(exports.examplePages).forEach((key) => {
    exampleRoutes.push({
        meta: {
            method: 'GET',
            path: key
        },
        route: (req, res) => {
            logger(`serving page ${req.url}`);
            res.render(exports.examplePages[req.url], {
                debug_scope: debug_scope,
                address: address,
            });
        }
    });
});
function addRoute(app) {
    return (route) => {
        app[route.meta.method.toLowerCase()](route.meta.path, route.route);
    };
}
/**
 * Setup
 */
const routes = {
    setup: function (app, examplesEnabled = config_1.default.get('examples:enabled')) {
        baseRoutes.forEach(addRoute(app));
        if (examplesEnabled) {
            exampleRoutes.forEach(addRoute(app));
        }
    }
};
exports.default = routes;
//# sourceMappingURL=/routes.js.map